{"version":3,"sources":["../src/Flag.js"],"names":[],"mappings":";;;;;;;;qBAA+B,OAAO;;;;sBACrB,WAAW;;;;qBAEb,mBAAM,WAAW,CAAC;;;;;;;AAK/B,WAAS,EAAE;;AAET,QAAI,EAAE,OAVK,SAAS,CAUJ,MAAM;;AAEtB,UAAM,EAAE,OAZG,SAAS,CAYF,KAAK,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;;AAG/C,WAAO,EAAE,OAfE,SAAS,CAeD,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;;AAG9C,SAAK,EAAE,OAlBI,SAAS,CAkBH,IAAI;;;AAGrB,SAAK,EAAE,OArBI,SAAS,CAqBH,MAAM;;;AAGvB,UAAM,EAAE,OAxBG,SAAS,CAwBF,MAAM;;;AAGxB,OAAG,EAAE,OA3BM,SAAS,CA2BL,MAAM;GACtB;;;;;;AAMD,iBAAe,EAAA,2BAAG;AAChB,WAAO;;AAEL,UAAI,EAAE,UAAU;;;AAGhB,YAAM,EAAE,KAAK;;;AAGb,aAAO,EAAE,EAAE;;;AAGX,WAAK,EAAE,KAAK;;AAEZ,WAAK,EAAE,IAAI;;AAEX,YAAM,EAAE,IAAI;;AAEZ,SAAG,EAAE,IAAI;KACV,CAAC;GACH;;;;;;AAMD,QAAM,EAAA,kBAAG;AACP,QAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,MAAM,CAAC;;AAEjD,QAAM,MAAM,GAAG,AAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,KAAK,GACzE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;;AAEzC,QAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;AAElE,WACE;AACE,SAAG,EAAE,OAAO,AAAC;AACb,SAAG,EACD,4BAA4B,GAC5B,IAAI,GACJ,GAAG,GACH,MAAM,GACN,GAAG,GACH,IAAI,CAAC,KAAK,CAAC,IAAI,GACf,GAAG,GACH,IAAI,CAAC,KAAK,CAAC,MAAM,AAClB;AACD,WAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAAC;AACxB,YAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,AAAC;MAC1B,CACF;GACH;CACF,CAAC","file":"Flag.js","sourcesContent":["import React, {PropTypes} from \"react\";\nimport Flag from \"./Flag.js\";\n\nexport default React.createClass({\n  /**\n   * React properties\n   */\n\n  propTypes: {\n    // Name of country or region for this flag.\n    name: PropTypes.string,\n\n    format: PropTypes.oneOf([\"png\", \"icns\", \"ico\"]),\n\n    // Size of the country flag\n    pngSize: PropTypes.oneOf([16, 24, 32, 48, 64]),\n\n    // Size of the country flag\n    shiny: PropTypes.bool,\n\n    // Width of the flag <img> HTML tag.\n    width: PropTypes.number,\n\n    // Height of the flag <img> HTML tag.\n    height: PropTypes.number,\n\n    // Alternative text of the flag <img> HTML tag.\n    alt: PropTypes.string,\n  },\n\n  /**\n   * React lifecycle\n   */\n\n  getDefaultProps() {\n    return {\n      // Default flag.\n      name: \"_unknown\",\n\n      // Default format in PNG.\n      format: \"png\",\n\n      // Default size of 32 pixels.\n      pngSize: 32,\n\n      // Shiny flags (Default is flat)\n      shiny: false,\n\n      width: null,\n\n      height: null,\n\n      alt: null\n    };\n  },\n\n  /**\n   * React render\n   */\n\n  render() {\n    const type = this.props.shiny ? \"shiny\" : \"flat\";\n\n    const folder = (this.props.format === \"icns\" ||Â this.props.format === \"ico\") ?\n      this.props.format : this.props.pngSize;\n\n    const altText = this.props.alt ? this.props.alt : this.props.name;\n\n    return (\n      <img\n        alt={altText}\n        src={\n          \"../vendor/flags/flags-iso/\" +\n          type +\n          \"/\" +\n          folder +\n          \"/\" +\n          this.props.name +\n          \".\" +\n          this.props.format\n        }\n        width={this.props.width}\n        height={this.props.height}\n      />\n    );\n  }\n});"]}